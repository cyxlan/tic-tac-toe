:root {
  --bg: rgb(56, 56, 56);
  --text: rgb(255, 255, 255);
}

body {
  background-color: var(--bg);
  color: var(--text);
  padding: 40px;
  font-family: "Jersey 10", sans-serif;
  height: 100vh;
}

.container {
  position: relative;
  height: 100%;
}

/* X & O icons */
#game-state:is(.mark-X, .mark-O)::before,
#board .cell::after,
.player-name-wrap p::before {
  content: "";
  aspect-ratio: 1 / 1;
  image-rendering: pixelated; /* nearest neighbour scaling */
}
#game-state.mark-X::before,
#board .cell.mark-X::after,
.player-name-wrap.player-1 p::before {
  background: url(../img/x.png) no-repeat center/cover;
}
#game-state.mark-O::before,
#board .cell.mark-O::after,
.player-name-wrap.player-2 p::before {
  background: url(../img/o.png) no-repeat center/cover;
}

h1,
#game-state {
  font-weight: 400;
  line-height: 1;
}
h1 {
  text-transform: uppercase;
  font-size: 3rem;
  position: absolute;
  top: 0;
  left: 0;
}
#game-state {
  text-align: center;
  font-size: 4rem;
  /* X & O icons */
  &::before {
    display: inline-block;
    margin-right: 30px;
    height: 50px;
  }
}

#board {
  margin: 50px auto;
  display: grid;
  grid-template: repeat(3, 1fr) / repeat(3, 1fr);
  gap: 6px;
  overflow: hidden; /* hide outside border lines */
  aspect-ratio: 1 / 1;
  height: min(60vh, calc(100vw - 80px));
  .cell {
    height: 100%;
    width: 100%;
    outline: 6px dashed var(--text);
    position: relative;
    /* X & O icons */
    &::after {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      height: 100px;
      max-height: 60%;
    }
  }
}

.player-name-wrap {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  text-align: center;
  width: calc((100% - 680px) / 2);
  p {
    font-size: 4rem;
    line-height: 1;
    margin-bottom: 20px;
    &::before {
      display: block;
      margin: 0 auto 20px;
      height: 60px;
    }
  }
  .rename-btn {
    font-size: 1.6rem;
    width: 160px;
    gap: 8px;
    /* pencil icon */
    svg {
      height: 20px;
    }
  }
}
.player-name-wrap.player-1 {
  left: 0;
}
.player-name-wrap.player-2 {
  right: 0;
}

.btn {
  padding: 0 10px;
  margin: 0 auto;
  border: 2px solid var(--text);
  border-radius: 5px;
  border-bottom-width: 10px;
  transition: all 100ms ease-in-out;
  &:hover,
  &:focus {
    /* button pressed effect */
    border-bottom-width: 2px;
    transform: translateY(8px);
    margin-bottom: 8px; /* prevent moving up other elements */
  }
  &:active {
    color: var(--bg);
    background-color: var(--text);
  }
}
.icon-btn {
  display: flex;
  align-items: center;
  justify-content: center;
  svg {
    aspect-ratio: 1 / 1;
  }
}

#restart {
  font-size: 2rem;
  gap: 5px;
  width: 200px;
  text-transform: uppercase;
  /* arrow icon */
  svg {
    height: 24px;
  }
}

dialog {
  position: absolute;
  border-radius: 10px;
}

#spot-taken {
  right: 40px;
  left: auto;
  bottom: 40px;
  font-size: 2rem;
  border: 2px solid var(--text);
  color: inherit;
  padding: 20px 30px;
  p {
    line-height: 1;
  }
  .timer-bar {
    position: absolute;
    bottom: 0;
    left: 0;
    height: 4px;
    background-color: var(--text);
  }
}

#rename-popup {
  position: relative;
  background-color: var(--bg);
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  min-width: 500px;
  padding: 40px 50px;
  text-align: center;
}
#rename-form {
  display: flex;
  flex-direction: column;
  gap: 20px;
  label {
    line-height: 1;
    font-size: 1.6rem;
    .current-name {
      font-size: 2rem;
    }
  }
  input {
    color: #000;
    background-color: var(--text);
    font-size: 1.6rem;
    padding: 0 10px;
    border-radius: 5px;
  }
  button[type="submit"] {
    margin-top: 20px;
    font-size: 1.8rem;
    width: 160px;
    text-transform: uppercase;
  }
  .close-btn {
    position: absolute;
    top: 20px;
    right: 20px;
    color: var(--text);
    svg {
      height: 24px;
    }
  }
}

/* animate dialog */
/* open state */
dialog[open] {
  opacity: 1;
}
/* closed state */
dialog {
  opacity: 0;
  transition:
    opacity 100ms ease-in-out,
    overlay 100ms ease-in-out allow-discrete,
    display 100ms ease-in-out allow-discrete;
}

@starting-style {
  dialog[open] {
    opacity: 0;
  }
}
dialog::backdrop {
  background-color: rgb(0 0 0 / 0%);
  transition:
    overlay 100ms allow-discrete,
    display 100ms allow-discrete,
    background-color 100ms;
}
dialog[open]::backdrop {
  background-color: rgb(0 0 0 / 50%);
}
@starting-style {
  dialog[open]::backdrop {
    background-color: rgb(0 0 0 / 0%);
  }
}